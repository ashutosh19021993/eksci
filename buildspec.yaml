---
version: 0.2
phases:
  install:
    commands:
      - echo Logging in to Amazon ECR...
      #- $(aws ecr get-login --no-include-email --region us-east-1)
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/p2w0c5l8
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
  pre_build:
      commands:
        #- TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - echo $TAG
        - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY:$TAG"'@' Kubernetes/eks-deployment.yml
        #- $(aws ecr get-login --no-include-email)
        - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/p2w0c5l8
        - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      #- docker build --tag $REPOSITORY:$latest .
      #- docker build  https://github.com/ashutosh19021993/eksci.git#hello:latest .
      - docker build -t eks-test-1:latest .
      - docker tag eks-test-1:latest public.ecr.aws/p2w0c5l8/eks-test-1:latest
  post_build:
    commands:
      #- docker push $REPOSITORY:latest
      - docker push public.ecr.aws/p2w0c5l8/eks-test-1:latest
      - CREDENTIALS=$( aws sts assume-role --role-arn --region=us-west-1 arn:aws:iam::306274812096:role/service-role/codebuild-testeks-service-role --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name eks
      - kubectl apply -f Kubernetes/eks-deployment.yml 
      - printf '[{"name":"eks-deployment","imageUri":"%s"}]' $REPOSITORY:$TAG > build.json
artifacts:
  files: build.json
